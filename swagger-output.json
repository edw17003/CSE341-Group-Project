{
  "openapi": "3.0.0",
  "info": {
    "title": "Group Project API",
    "description": "API for managing users, roles, books, and art in a group project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "local server"
    },
    {
      "url": "https://cse341-groupproject.onrender.com/",
      "description": "production server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "API for managing users"
    },
    {
      "name": "Roles",
      "description": "API for managing roles"
    },
    {
      "name": "Books",
      "description": "API for managing books"
    },
    {
      "name": "Art",
      "description": "API for managing art"
    }
  ],
  "paths": {
    "/arts/": {
      "get": {
        "tags": ["Art"],
        "summary": "Get all artworks",
        "description": "Retrieves all artworks from the collection",
        "operationId": "getAllArts",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "$ref": "#/components/schemas/art"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Art"],
        "summary": "Create a new artwork",
        "description": "Adds a new artwork to the collection",
        "operationId": "createArt",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created art object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/art"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Artwork created successfully",
            "schema": {
              "$ref": "#/components/schemas/art"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "default": {
            "description": "An Artwork object",
            "schema": {
              "$ref": "#/components/schemas/art"
            }
          }
        }
      }
    },
    "/arts/{userId}": {
      "get": {
        "tags": ["Art"],
        "summary": "Finds artwork by user Id",
        "description": "Retrieves an artwork based on the user ID",
        "operationId": "getArtUserId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/components/schemas/art"
            }
          },
          "404": {
            "description": "Artwork not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/arts/{artId}": {
      "get": {
        "tags": ["Art"],
        "summary": "Finds artwork by Id",
        "description": "Retrieves an artwork based on its ID",
        "operationId": "getArt",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "artId",
            "in": "path",
            "description": "ID of the artwork to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/components/schemas/art"
            }
          },
          "404": {
            "description": "Artwork not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Art"],
        "summary": "Updated an artwork",
        "description": "Updates an existing artwork in the collection. This can only be done by the logged in user.",
        "operationId": "updateArt",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "artId",
            "in": "path",
            "description": "ID of the artwork to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated art object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/art"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Artwork updated successfully"
          },
          "404": {
            "description": "Artwork not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },      
      "delete": {
        "tags": ["Art"],
        "summary": "Delete an artwork",
        "description": "Deletes an artwork from de collection. This can only be done by the logged in user.",
        "operationId": "deleteArt",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "artId",
            "in": "path",
            "description": "The Id of artwork to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Artwork deleted successfully "
          },
          "400": {
            "description": "Invalid artId supplied"
          },
          "404": {
            "description": "Artwork not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Get all users information from the database",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "description": "Create a new user and insert it into the database",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "example": "any"
                  },
                  "_id": {
                    "example": "any"
                  },
                  "googleId": {
                    "example": "any"
                  },
                  "displayName": {
                    "example": "any"
                  },
                  "lastName": {
                    "example": "any"
                  },
                  "image": {
                    "example": "any"
                  },
                  "roleId": {
                    "example": "any"
                  },
                  "biography": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user",
        "description": "Get a users information from the database",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit a user",
        "description": "Update user information by Google ID",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "description": "Delete user information by Google ID",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/books/": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books",
        "description": "Get all books information from the database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Create a new book",
        "description": "Create a new book and insert it into the database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "author": {
                    "example": "any"
                  },
                  "genre": {
                    "example": "any"
                  },
                  "publicationDate": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "associatedArtwork": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books/{_id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get a book by Id",
        "description": "Get a book information from the database",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Edit a book",
        "description": "Update book information by id",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "any"
                  },
                  "author": {
                    "example": "any"
                  },
                  "genre": {
                    "example": "any"
                  },
                  "publicationDate": {
                    "example": "any"
                  },
                  "description": {
                    "example": "any"
                  },
                  "associatedArtwork": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete a book",
        "description": "Delete book information by id",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/books/bookAuthor/{author}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get a book by author",
        "description": "Get a book information from the database by the author",
        "parameters": [
          {
            "name": "author",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/roles/": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a new role",
        "description": "Create a new role and insert it into the database",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "example": "any"
                  },
                  "roleName": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get all roles",
        "description": "Get all roles information from the database",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/roles/{roleId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get a role by ID",
        "description": "Get a role information from the database by ID",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a role by ID",
        "description": "Update role information by ID",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleName": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a role by ID",
        "description": "Delete role information by ID",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "users": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "googleId": {
                "type": "string",
                "example": "string"
              },
              "displayName": {
                "type": "string",
                "example": "string"
              },
              "firstName": {
                "type": "string",
                "example": "string"
              },
              "lastName": {
                "type": "string",
                "example": "string"
              },
              "image": {
                "type": "string",
                "example": "string"
              },
              "roleId": {
                "type": "string",
                "example": "integer"
              },
              "biography": {
                "type": "string",
                "example": "string"
              }
            }
          }
        }
      },
      "roles": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "roleId": {
                "type": "string",
                "example": "integer"
              },
              "name": {
                "type": "string",
                "example": "string"
              }
            }
          }
        }
      },
      "books": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "bookId": {
                "type": "string",
                "example": "integer"
              },
              "userId": {
                "type": "string",
                "example": "integer"
              },
              "title": {
                "type": "string",
                "example": "string"
              },
              "author": {
                "type": "string",
                "example": "string"
              },
              "genre": {
                "type": "string",
                "example": "string"
              },
              "image": {
                "type": "string",
                "example": "string"
              }
            }
          }
        }
      },
      "art": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "artId": {
                "type": "string",
                "example": "integer"
              },
              "userId": {
                "type": "string",
                "example": "integer"
              },
              "title": {
                "type": "string",
                "example": "string"
              },
              "description": {
                "type": "string",
                "example": "string"
              },
              "publicationDate": {
                "type": "string",
                "example": "string"
              },
              "genre": {
                "type": "string"chat,
                "example": "string"
              },
              "image": {
                "type": "string",
                "example": "string"
              }
            }
          }
        }
      }
    }
  }
}